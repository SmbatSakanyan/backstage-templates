apiVersion: scaffolder.backstage.io/v1beta3
kind: Template
metadata:
  name: ipam-cidr-tool
  title: IPAM – allocate or release CIDR
spec:
  owner: platform-team
  type: service

  # ──────────────────────────────────────────────────────────────
  parameters:
    - title: Choose operation
      required: [operation]
      properties:
        operation:
          type: string
          enum: [allocate, release]
          default: allocate

    - title: IPAM Pool
      required: [ipamPoolId]
      properties:
        ipamPoolId:
          type: string
          title: IPAM Pool ID

    # extra input only when Allocate path
    - if:
        properties: { operation: { const: allocate } }
      then:
        required: [mask]
        properties:
          mask:
            type: integer
            title: Mask bits
            default: 24

    # extra input only when Release path
    - if:
        properties: { operation: { const: release } }
      then:
        required: [cidr]
        properties:
          cidr:
            type: string
            title: CIDR to release

  # ──────────────────────────────────────────────────────────────
  steps:

    # ALLOCATE path ── Step A1: get 5 free blocks
    - id: candidates
      name: Find free CIDRs
      if: ${{ parameters.operation == 'allocate' }}
      action: aws:ipam:list-candidates
      input:
        ipamPoolId: ${{ parameters.ipamPoolId }}
        mask:       ${{ parameters.mask }}

    # ALLOCATE path ── Step A2: let user pick one
    - id: choose
      name: Pick a CIDR
      if: ${{ parameters.operation == 'allocate' }}
      action: scaffolder:prompt                        # built-in
      input:
        title: Select a CIDR block
        type: select
        options: ${{ steps.candidates.output.candidates }}   # array -> dropdown

    # ALLOCATE path ── Step A3: for now just echo the choice
    - id: echo
      name: Echo choice
      if: ${{ parameters.operation == 'allocate' }}
      action: scaffolder:debug
      input:
        message: >
          User chose CIDR ${{ steps.choose.output }} —
          allocate logic will be implemented later.

    # RELEASE path ── single step
    - id: release
      name: Release CIDR
      if: ${{ parameters.operation == 'release' }}
      action: aws:ipam:release-cidr
      input:
        ipamPoolId: ${{ parameters.ipamPoolId }}
        cidr:       ${{ parameters.cidr }}

  # ──────────────────────────────────────────────────────────────
  output:
    text:
      - title: Result
        content: |
          ${{ steps.echo.output.message || steps.release.output.releasedCidr }}
